<?xml version="1.0" encoding="UTF-8"?><testrun name="progfun-example" project="progfun-example" tests="15" started="15" failures="0" errors="2" ignored="0">
  <testsuite name="example.ListsSuite" time="0.158">
    <testcase name="one plus one is two" classname="example.ListsSuite" time="0.019"/>
    <testcase name="one plus two is three?" classname="example.ListsSuite" time="0.004"/>
    <testcase name="details why one plus one is not three" classname="example.ListsSuite" time="0.008"/>
    <testcase name="intNotZero throws an exception if its argument is 0" classname="example.ListsSuite" time="0.007"/>
    <testcase name="sum of a few numbers" classname="example.ListsSuite" time="0.039"/>
    <testcase name="sum of mixed sign numbers" classname="example.ListsSuite" time="0.001"/>
    <testcase name="sum of empty list is 0" classname="example.ListsSuite" time="0.001"/>
    <testcase name="maxOfTwo - right is max" classname="example.ListsSuite" time="0.002"/>
    <testcase name="maxOfTwo - left is max" classname="example.ListsSuite" time="0.007"/>
    <testcase name="maxOfTwo - left = right" classname="example.ListsSuite" time="0.004"/>
    <testcase name="max of a few numbers" classname="example.ListsSuite" time="0.001"/>
    <testcase name="max of some mixed sign numbers" classname="example.ListsSuite" time="0.048">
      <error>org.scalatest.exceptions.TestFailedException: 2 did not equal 3&#13;
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:318)&#13;
	at example.ListsSuite.newAssertionFailedException(ListsSuite.scala:27)&#13;
	at org.scalatest.Assertions$class.assert(Assertions.scala:401)&#13;
	at example.ListsSuite.assert(ListsSuite.scala:27)&#13;
	at example.ListsSuite$$anonfun$12.apply$mcV$sp(ListsSuite.scala:147)&#13;
	at example.ListsSuite$$anonfun$12.apply(ListsSuite.scala:147)&#13;
	at example.ListsSuite$$anonfun$12.apply(ListsSuite.scala:147)&#13;
	at org.scalatest.FunSuite$$anon$1.apply(FunSuite.scala:1265)&#13;
	at org.scalatest.Suite$class.withFixture(Suite.scala:1974)&#13;
	at example.ListsSuite.withFixture(ListsSuite.scala:27)&#13;
	at org.scalatest.FunSuite$class.invokeWithFixture$1(FunSuite.scala:1262)&#13;
	at org.scalatest.FunSuite$$anonfun$runTest$1.apply(FunSuite.scala:1271)&#13;
	at org.scalatest.FunSuite$$anonfun$runTest$1.apply(FunSuite.scala:1271)&#13;
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:198)&#13;
	at org.scalatest.FunSuite$class.runTest(FunSuite.scala:1271)&#13;
	at example.ListsSuite.runTest(ListsSuite.scala:27)&#13;
	at org.scalatest.FunSuite$$anonfun$runTests$1.apply(FunSuite.scala:1304)&#13;
	at org.scalatest.FunSuite$$anonfun$runTests$1.apply(FunSuite.scala:1304)&#13;
	at org.scalatest.SuperEngine$$anonfun$org$scalatest$SuperEngine$$runTestsInBranch$1.apply(Engine.scala:260)&#13;
	at org.scalatest.SuperEngine$$anonfun$org$scalatest$SuperEngine$$runTestsInBranch$1.apply(Engine.scala:249)&#13;
	at scala.collection.immutable.List.foreach(List.scala:318)&#13;
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:249)&#13;
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:326)&#13;
	at org.scalatest.FunSuite$class.runTests(FunSuite.scala:1304)&#13;
	at example.ListsSuite.runTests(ListsSuite.scala:27)&#13;
	at org.scalatest.Suite$class.run(Suite.scala:2303)&#13;
	at example.ListsSuite.org$scalatest$FunSuite$$super$run(ListsSuite.scala:27)&#13;
	at org.scalatest.FunSuite$$anonfun$run$1.apply(FunSuite.scala:1310)&#13;
	at org.scalatest.FunSuite$$anonfun$run$1.apply(FunSuite.scala:1310)&#13;
	at org.scalatest.SuperEngine.runImpl(Engine.scala:362)&#13;
	at org.scalatest.FunSuite$class.run(FunSuite.scala:1310)&#13;
	at example.ListsSuite.run(ListsSuite.scala:27)&#13;
	at org.scalatest.junit.JUnitRunner.run(JUnitRunner.scala:94)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&#13;
&#13;
</error>
    </testcase>
    <testcase name="max of list of all negative numbers" classname="example.ListsSuite" time="0.003"/>
    <testcase name="max of list of a single number" classname="example.ListsSuite" time="0.004">
      <error>java.util.NoSuchElementException: head of empty list&#13;
	at scala.collection.immutable.Nil$.head(List.scala:337)&#13;
	at scala.collection.immutable.Nil$.head(List.scala:334)&#13;
	at example.Lists$.maxHelper(Lists.scala:53)&#13;
	at example.Lists$.max(Lists.scala:48)&#13;
	at example.ListsSuite$$anonfun$14.apply$mcV$sp(ListsSuite.scala:155)&#13;
	at example.ListsSuite$$anonfun$14.apply(ListsSuite.scala:155)&#13;
	at example.ListsSuite$$anonfun$14.apply(ListsSuite.scala:155)&#13;
	at org.scalatest.FunSuite$$anon$1.apply(FunSuite.scala:1265)&#13;
	at org.scalatest.Suite$class.withFixture(Suite.scala:1974)&#13;
	at example.ListsSuite.withFixture(ListsSuite.scala:27)&#13;
	at org.scalatest.FunSuite$class.invokeWithFixture$1(FunSuite.scala:1262)&#13;
	at org.scalatest.FunSuite$$anonfun$runTest$1.apply(FunSuite.scala:1271)&#13;
	at org.scalatest.FunSuite$$anonfun$runTest$1.apply(FunSuite.scala:1271)&#13;
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:198)&#13;
	at org.scalatest.FunSuite$class.runTest(FunSuite.scala:1271)&#13;
	at example.ListsSuite.runTest(ListsSuite.scala:27)&#13;
	at org.scalatest.FunSuite$$anonfun$runTests$1.apply(FunSuite.scala:1304)&#13;
	at org.scalatest.FunSuite$$anonfun$runTests$1.apply(FunSuite.scala:1304)&#13;
	at org.scalatest.SuperEngine$$anonfun$org$scalatest$SuperEngine$$runTestsInBranch$1.apply(Engine.scala:260)&#13;
	at org.scalatest.SuperEngine$$anonfun$org$scalatest$SuperEngine$$runTestsInBranch$1.apply(Engine.scala:249)&#13;
	at scala.collection.immutable.List.foreach(List.scala:318)&#13;
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:249)&#13;
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:326)&#13;
	at org.scalatest.FunSuite$class.runTests(FunSuite.scala:1304)&#13;
	at example.ListsSuite.runTests(ListsSuite.scala:27)&#13;
	at org.scalatest.Suite$class.run(Suite.scala:2303)&#13;
	at example.ListsSuite.org$scalatest$FunSuite$$super$run(ListsSuite.scala:27)&#13;
	at org.scalatest.FunSuite$$anonfun$run$1.apply(FunSuite.scala:1310)&#13;
	at org.scalatest.FunSuite$$anonfun$run$1.apply(FunSuite.scala:1310)&#13;
	at org.scalatest.SuperEngine.runImpl(Engine.scala:362)&#13;
	at org.scalatest.FunSuite$class.run(FunSuite.scala:1310)&#13;
	at example.ListsSuite.run(ListsSuite.scala:27)&#13;
	at org.scalatest.junit.JUnitRunner.run(JUnitRunner.scala:94)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&#13;
&#13;
</error>
    </testcase>
    <testcase name="max of empty list is java.util.NoSuchElementException" classname="example.ListsSuite" time="0.007"/>
  </testsuite>
</testrun>
