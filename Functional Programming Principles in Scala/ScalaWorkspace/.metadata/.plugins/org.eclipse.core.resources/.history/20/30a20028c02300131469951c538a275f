package recfun

object Worksheet {
  println("Welcome to the Scala worksheet")

  def nextRow(row: Int, col: Int): Int =
    if (row == col) row + 1
    else row

  def nextCol(row: Int, col: Int): Int =
    if (row == col) 0
    else col + 1

  def sum(n: Int): Int =
    if (n == 0) 0
    else n + sum(n - 1)

  def cellAddr(row: Int, col: Int): Int =
    sum(row) + col

  def calcNextPTEntry(ptList: List[Int], row: Int, col: Int): Int =
    if (col == 0) 1
    else if (col == row) 1
    else ptList(cellAddr(row - 1, col - 1)) + ptList(cellAddr(row - 1, col))

  calcNextPTEntry(List(1, 1, 1, 1, 2, 1, 1), 3, 1)

    def findRowCol(row: Int, col: Int, ptList: List[Int], curRow: Int, curCol: Int): Int =
      if (cellAddr(row, col) == cellAddr(curRow, curCol)) ptList(cellAddr(row, col))
      else findRowCol(col,
                    row,
                    ptList ++ List(calcNextPTEntry(ptList, nextRow(curRow, curCol), nextCol(curRow, curCol))),
                    nextRow(curRow, curCol),
                    nextCol(curRow, curCol))
           
    findRowCol(1, 1, List(1, 1), 1, 0)
    val ptList = List(1,1)
    ptList  ++ List(calcNextPTEntry(ptList, nextRow(1, 0), nextCol(1, 0)))
}