package funsets

object assignment2_workssheet {
  type Set = Int => Boolean
  def singletonSet(elem: Int): Set = (x => x == elem)
                                                  //> singletonSet: (elem: Int)Int => Boolean
  
  val s1 = singletonSet(1)                        //> s1  : Int => Boolean = <function1>
  val s2 = singletonSet(2)                        //> s2  : Int => Boolean = <function1>
  val s3 = singletonSet(3)                        //> s3  : Int => Boolean = <function1>
  
  def greaterThan2(x: Int) = x > 2                //> greaterThan2: (x: Int)Boolean
  
  def filter(s: Set, p: Int => Boolean): Set = x => p(x)
                                                  //> filter: (s: Int => Boolean, p: Int => Boolean)Int => Boolean
  
  greaterThan2(1)                                 //> res0: Boolean = false
  greaterThan2(2)                                 //> res1: Boolean = false
  greaterThan2(3)                                 //> res2: Boolean = true
 
 
  filter(s1, greaterThan2)                        //> res3: Int => Boolean = <function1>
  
}